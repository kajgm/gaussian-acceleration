#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new emu_dpa_hub_0(".emu_wrapper.emu_i.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(39);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(19183272);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(19183608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(19183664);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(19184056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(19184280);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(19184336);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(19184448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(19184616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(19184672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(19184728);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(19184784);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(19185008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(19185232);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(19185288);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(19185400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(19185568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(19185624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(19185680);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(19185736);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(19185960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(19186408);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(19186464);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(19186632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(19186688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(19186744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(19186912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(19187192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(19187248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(19187304);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(19187360);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_rready);
        sc_inst_2 = new emu_dpa_mon0_0(".emu_wrapper.emu_i.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(40);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(19187856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(19188080);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(19188136);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(19188248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(19188416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(19188472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(19188528);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(19188584);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_AWID.bind(*p_2_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_AWLEN.bind(*p_2_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->mon_AWSIZE.bind(*p_2_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_AWBURST.bind(*p_2_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_2_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WLAST.bind(*p_2_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WLAST);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_ARID.bind(*p_2_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_ARLEN.bind(*p_2_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->mon_ARSIZE.bind(*p_2_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_ARBURST.bind(*p_2_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_2_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RDATA);
        xsim_sc_channel<0, bool > *p_2_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RLAST.bind(*p_2_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_RID.bind(*p_2_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_BID.bind(*p_2_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BID);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tready.bind(*p_2_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_rd_tdata.bind(*p_2_m_axis_rd_tdata);
        p_2_m_axis_rd_tdata->set_sv_netview_offsetfromdp(19190376);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tlast.bind(*p_2_m_axis_rd_tlast);
        p_2_m_axis_rd_tlast->set_sv_netview_offsetfromdp(19190432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_rd_tid.bind(*p_2_m_axis_rd_tid);
        p_2_m_axis_rd_tid->set_sv_netview_offsetfromdp(19190488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_rd_tdest.bind(*p_2_m_axis_rd_tdest);
        p_2_m_axis_rd_tdest->set_sv_netview_offsetfromdp(19190544);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tready.bind(*p_2_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_wr_tdata.bind(*p_2_m_axis_wr_tdata);
        p_2_m_axis_wr_tdata->set_sv_netview_offsetfromdp(19190656);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tlast.bind(*p_2_m_axis_wr_tlast);
        p_2_m_axis_wr_tlast->set_sv_netview_offsetfromdp(19190712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_wr_tid.bind(*p_2_m_axis_wr_tid);
        p_2_m_axis_wr_tid->set_sv_netview_offsetfromdp(19190768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_wr_tdest.bind(*p_2_m_axis_wr_tdest);
        p_2_m_axis_wr_tdest->set_sv_netview_offsetfromdp(19190824);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tvalid.bind(*p_2_m_axis_wr_tvalid);
        p_2_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(19190880);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tvalid.bind(*p_2_m_axis_rd_tvalid);
        p_2_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(19190936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr_mon.bind(*p_2_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot_mon.bind(*p_2_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid_mon.bind(*p_2_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready_mon.bind(*p_2_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata_mon.bind(*p_2_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb_mon.bind(*p_2_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid_mon.bind(*p_2_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready_mon.bind(*p_2_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp_mon.bind(*p_2_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid_mon.bind(*p_2_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready_mon.bind(*p_2_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr_mon.bind(*p_2_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot_mon.bind(*p_2_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid_mon.bind(*p_2_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready_mon.bind(*p_2_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata_mon.bind(*p_2_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp_mon.bind(*p_2_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid_mon.bind(*p_2_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready_mon.bind(*p_2_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready_mon);
        sc_inst_3 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_3->xsim_set_dbg_index(24);
        sc_inst_4 = new emu_hmss_0_0(".emu_wrapper.emu_i.hmss_0");
        sc_inst_4->xsim_set_dbg_index(29);
        xsim_sc_channel<0, bool > *p_4_hbm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->hbm_aclk.bind(*p_4_hbm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_hbm_aclk);
        xsim_sc_channel<0, bool > *p_4_hbm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->hbm_aresetn.bind(*p_4_hbm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_hbm_aresetn);
        xsim_sc_channel<0, bool > *p_4_hbm_ref_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->hbm_ref_clk.bind(*p_4_hbm_ref_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_hbm_ref_clk);
        xsim_sc_channel<0, bool > *p_4_hbm_mc_init_seq_complete = new xsim_sc_channel<0, bool >();
        sc_inst_4->hbm_mc_init_seq_complete.bind(*p_4_hbm_mc_init_seq_complete);
        p_4_hbm_mc_init_seq_complete->set_sv_netview_offsetfromdp(62022632);
        xsim_sc_channel<0, bool > *p_4_DRAM_0_STAT_TEMP = new xsim_sc_channel<0, bool >();
        sc_inst_4->DRAM_0_STAT_TEMP.bind(*p_4_DRAM_0_STAT_TEMP);
        p_4_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(62022688);
        xsim_sc_channel<0, bool > *p_4_DRAM_1_STAT_TEMP = new xsim_sc_channel<0, bool >();
        sc_inst_4->DRAM_1_STAT_TEMP.bind(*p_4_DRAM_1_STAT_TEMP);
        p_4_DRAM_1_STAT_TEMP->set_sv_netview_offsetfromdp(62022744);
        xsim_sc_channel<0, bool > *p_4_DRAM_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_4->DRAM_STAT_CATTRIP.bind(*p_4_DRAM_STAT_CATTRIP);
        p_4_DRAM_STAT_CATTRIP->set_sv_netview_offsetfromdp(62022800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S_AXI_CTRL_awaddr = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S_AXI_CTRL_awaddr.bind(*p_4_S_AXI_CTRL_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S_AXI_CTRL_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S_AXI_CTRL_awprot.bind(*p_4_S_AXI_CTRL_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_awvalid.bind(*p_4_S_AXI_CTRL_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_awready.bind(*p_4_S_AXI_CTRL_awready);
        p_4_S_AXI_CTRL_awready->set_sv_netview_offsetfromdp(62023024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S_AXI_CTRL_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S_AXI_CTRL_wdata.bind(*p_4_S_AXI_CTRL_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S_AXI_CTRL_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S_AXI_CTRL_wstrb.bind(*p_4_S_AXI_CTRL_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_wvalid.bind(*p_4_S_AXI_CTRL_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_wready.bind(*p_4_S_AXI_CTRL_wready);
        p_4_S_AXI_CTRL_wready->set_sv_netview_offsetfromdp(62023248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S_AXI_CTRL_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S_AXI_CTRL_bresp.bind(*p_4_S_AXI_CTRL_bresp);
        p_4_S_AXI_CTRL_bresp->set_sv_netview_offsetfromdp(62023304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_bvalid.bind(*p_4_S_AXI_CTRL_bvalid);
        p_4_S_AXI_CTRL_bvalid->set_sv_netview_offsetfromdp(62023360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_bready.bind(*p_4_S_AXI_CTRL_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_bready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S_AXI_CTRL_araddr = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S_AXI_CTRL_araddr.bind(*p_4_S_AXI_CTRL_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S_AXI_CTRL_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S_AXI_CTRL_arprot.bind(*p_4_S_AXI_CTRL_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_arvalid.bind(*p_4_S_AXI_CTRL_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_arready.bind(*p_4_S_AXI_CTRL_arready);
        p_4_S_AXI_CTRL_arready->set_sv_netview_offsetfromdp(62023640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S_AXI_CTRL_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S_AXI_CTRL_rdata.bind(*p_4_S_AXI_CTRL_rdata);
        p_4_S_AXI_CTRL_rdata->set_sv_netview_offsetfromdp(62023696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S_AXI_CTRL_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S_AXI_CTRL_rresp.bind(*p_4_S_AXI_CTRL_rresp);
        p_4_S_AXI_CTRL_rresp->set_sv_netview_offsetfromdp(62023752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_rvalid.bind(*p_4_S_AXI_CTRL_rvalid);
        p_4_S_AXI_CTRL_rvalid->set_sv_netview_offsetfromdp(62023808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S_AXI_CTRL_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S_AXI_CTRL_rready.bind(*p_4_S_AXI_CTRL_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S_AXI_CTRL_rready);
        xsim_sc_channel<0, bool > *p_4_ctrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->ctrl_aclk.bind(*p_4_ctrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_ctrl_aclk);
        xsim_sc_channel<0, bool > *p_4_ctrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->ctrl_aresetn.bind(*p_4_ctrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_ctrl_aresetn);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk1.bind(*p_4_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk1);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<0, bool > *p_4_aresetn1 = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn1.bind(*p_4_aresetn1);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn1);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awid.bind(*p_4_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S00_AXI_awaddr.bind(*p_4_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S00_AXI_awlen.bind(*p_4_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_awsize.bind(*p_4_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_awburst.bind(*p_4_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S00_AXI_awlock.bind(*p_4_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_awcache.bind(*p_4_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_awprot.bind(*p_4_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_awqos.bind(*p_4_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awuser.bind(*p_4_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awvalid.bind(*p_4_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awready.bind(*p_4_S00_AXI_awready);
        p_4_S00_AXI_awready->set_sv_netview_offsetfromdp(62024872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S00_AXI_wdata.bind(*p_4_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_wstrb.bind(*p_4_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wlast.bind(*p_4_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wuser.bind(*p_4_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wvalid.bind(*p_4_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wready.bind(*p_4_S00_AXI_wready);
        p_4_S00_AXI_wready->set_sv_netview_offsetfromdp(62025208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bid.bind(*p_4_S00_AXI_bid);
        p_4_S00_AXI_bid->set_sv_netview_offsetfromdp(62025264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_bresp.bind(*p_4_S00_AXI_bresp);
        p_4_S00_AXI_bresp->set_sv_netview_offsetfromdp(62025320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_buser.bind(*p_4_S00_AXI_buser);
        p_4_S00_AXI_buser->set_sv_netview_offsetfromdp(62025376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bvalid.bind(*p_4_S00_AXI_bvalid);
        p_4_S00_AXI_bvalid->set_sv_netview_offsetfromdp(62025432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bready.bind(*p_4_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arid.bind(*p_4_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S00_AXI_araddr.bind(*p_4_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S00_AXI_arlen.bind(*p_4_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_arsize.bind(*p_4_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_arburst.bind(*p_4_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S00_AXI_arlock.bind(*p_4_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_arcache.bind(*p_4_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_arprot.bind(*p_4_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_arqos.bind(*p_4_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_aruser.bind(*p_4_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arvalid.bind(*p_4_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arready.bind(*p_4_S00_AXI_arready);
        p_4_S00_AXI_arready->set_sv_netview_offsetfromdp(62026160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rid.bind(*p_4_S00_AXI_rid);
        p_4_S00_AXI_rid->set_sv_netview_offsetfromdp(62026216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S00_AXI_rdata.bind(*p_4_S00_AXI_rdata);
        p_4_S00_AXI_rdata->set_sv_netview_offsetfromdp(62026272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_rresp.bind(*p_4_S00_AXI_rresp);
        p_4_S00_AXI_rresp->set_sv_netview_offsetfromdp(62026328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rlast.bind(*p_4_S00_AXI_rlast);
        p_4_S00_AXI_rlast->set_sv_netview_offsetfromdp(62026384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_ruser.bind(*p_4_S00_AXI_ruser);
        p_4_S00_AXI_ruser->set_sv_netview_offsetfromdp(62026440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rvalid.bind(*p_4_S00_AXI_rvalid);
        p_4_S00_AXI_rvalid->set_sv_netview_offsetfromdp(62026496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rready.bind(*p_4_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_awaddr.bind(*p_4_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_awlen.bind(*p_4_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_awsize.bind(*p_4_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awsize);
        xsim_sc_channel<0, bool > *p_4_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S01_AXI_awlock.bind(*p_4_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awcache.bind(*p_4_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_awprot.bind(*p_4_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awregion.bind(*p_4_S01_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awqos.bind(*p_4_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awvalid.bind(*p_4_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awready.bind(*p_4_S01_AXI_awready);
        p_4_S01_AXI_awready->set_sv_netview_offsetfromdp(62027112);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_S01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->S01_AXI_wdata.bind(*p_4_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_wstrb.bind(*p_4_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wlast.bind(*p_4_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wvalid.bind(*p_4_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wready.bind(*p_4_S01_AXI_wready);
        p_4_S01_AXI_wready->set_sv_netview_offsetfromdp(62027392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_bresp.bind(*p_4_S01_AXI_bresp);
        p_4_S01_AXI_bresp->set_sv_netview_offsetfromdp(62027448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bvalid.bind(*p_4_S01_AXI_bvalid);
        p_4_S01_AXI_bvalid->set_sv_netview_offsetfromdp(62027504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bready.bind(*p_4_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_araddr.bind(*p_4_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_arlen.bind(*p_4_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_arsize.bind(*p_4_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arsize);
        xsim_sc_channel<0, bool > *p_4_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S01_AXI_arlock.bind(*p_4_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arcache.bind(*p_4_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_arprot.bind(*p_4_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arregion.bind(*p_4_S01_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arqos.bind(*p_4_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arvalid.bind(*p_4_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arready.bind(*p_4_S01_AXI_arready);
        p_4_S01_AXI_arready->set_sv_netview_offsetfromdp(62028120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_S01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->S01_AXI_rdata.bind(*p_4_S01_AXI_rdata);
        p_4_S01_AXI_rdata->set_sv_netview_offsetfromdp(62028176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_rresp.bind(*p_4_S01_AXI_rresp);
        p_4_S01_AXI_rresp->set_sv_netview_offsetfromdp(62028232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rlast.bind(*p_4_S01_AXI_rlast);
        p_4_S01_AXI_rlast->set_sv_netview_offsetfromdp(62028288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rvalid.bind(*p_4_S01_AXI_rvalid);
        p_4_S01_AXI_rvalid->set_sv_netview_offsetfromdp(62028344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rready.bind(*p_4_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_rready);
        sc_inst_5 = new emu_memory_subsystem_0(".emu_wrapper.emu_i.memory_subsystem");
        sc_inst_5->xsim_set_dbg_index(35);
        xsim_sc_channel<0, bool > *p_5_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->aclk.bind(*p_5_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_aclk);
        xsim_sc_channel<0, bool > *p_5_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->aresetn.bind(*p_5_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awid.bind(*p_5_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_awaddr.bind(*p_5_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_awlen.bind(*p_5_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awsize.bind(*p_5_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_awburst.bind(*p_5_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_awlock.bind(*p_5_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awcache.bind(*p_5_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awprot.bind(*p_5_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awqos.bind(*p_5_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awuser.bind(*p_5_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awvalid.bind(*p_5_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awready.bind(*p_5_S00_AXI_awready);
        p_5_S00_AXI_awready->set_sv_netview_offsetfromdp(64721352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_wdata.bind(*p_5_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_wstrb.bind(*p_5_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wlast.bind(*p_5_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wuser.bind(*p_5_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wvalid.bind(*p_5_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wready.bind(*p_5_S00_AXI_wready);
        p_5_S00_AXI_wready->set_sv_netview_offsetfromdp(64721688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bid.bind(*p_5_S00_AXI_bid);
        p_5_S00_AXI_bid->set_sv_netview_offsetfromdp(64721744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_bresp.bind(*p_5_S00_AXI_bresp);
        p_5_S00_AXI_bresp->set_sv_netview_offsetfromdp(64721800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_buser.bind(*p_5_S00_AXI_buser);
        p_5_S00_AXI_buser->set_sv_netview_offsetfromdp(64721856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bvalid.bind(*p_5_S00_AXI_bvalid);
        p_5_S00_AXI_bvalid->set_sv_netview_offsetfromdp(64721912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bready.bind(*p_5_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arid.bind(*p_5_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_araddr.bind(*p_5_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_arlen.bind(*p_5_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arsize.bind(*p_5_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_arburst.bind(*p_5_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_arlock.bind(*p_5_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arcache.bind(*p_5_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arprot.bind(*p_5_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arqos.bind(*p_5_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_aruser.bind(*p_5_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arvalid.bind(*p_5_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arready.bind(*p_5_S00_AXI_arready);
        p_5_S00_AXI_arready->set_sv_netview_offsetfromdp(64722640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rid.bind(*p_5_S00_AXI_rid);
        p_5_S00_AXI_rid->set_sv_netview_offsetfromdp(64722696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_rdata.bind(*p_5_S00_AXI_rdata);
        p_5_S00_AXI_rdata->set_sv_netview_offsetfromdp(64722752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_rresp.bind(*p_5_S00_AXI_rresp);
        p_5_S00_AXI_rresp->set_sv_netview_offsetfromdp(64722808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rlast.bind(*p_5_S00_AXI_rlast);
        p_5_S00_AXI_rlast->set_sv_netview_offsetfromdp(64722864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_ruser.bind(*p_5_S00_AXI_ruser);
        p_5_S00_AXI_ruser->set_sv_netview_offsetfromdp(64722920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rvalid.bind(*p_5_S00_AXI_rvalid);
        p_5_S00_AXI_rvalid->set_sv_netview_offsetfromdp(64722976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rready.bind(*p_5_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_rready);
        xsim_sc_channel<0, bool > *p_5_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_5->ddr4_mem_calib_complete.bind(*p_5_ddr4_mem_calib_complete);
        p_5_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(64723088);
        sc_inst_6 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_6->xsim_set_dbg_index(4598);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->saxi_lite_cq_awaddr.bind(*p_6_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->saxi_lite_cq_awprot.bind(*p_6_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_awvalid.bind(*p_6_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_awready.bind(*p_6_saxi_lite_cq_awready);
        p_6_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(67264216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->saxi_lite_cq_wdata.bind(*p_6_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->saxi_lite_cq_wstrb.bind(*p_6_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_wvalid.bind(*p_6_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_wready.bind(*p_6_saxi_lite_cq_wready);
        p_6_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(67264440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->saxi_lite_cq_bresp.bind(*p_6_saxi_lite_cq_bresp);
        p_6_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(67264496);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_bvalid.bind(*p_6_saxi_lite_cq_bvalid);
        p_6_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(67264552);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_bready.bind(*p_6_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->saxi_lite_cq_araddr.bind(*p_6_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->saxi_lite_cq_arprot.bind(*p_6_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_arvalid.bind(*p_6_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_arready.bind(*p_6_saxi_lite_cq_arready);
        p_6_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(67264832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->saxi_lite_cq_rdata.bind(*p_6_saxi_lite_cq_rdata);
        p_6_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(67264888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->saxi_lite_cq_rresp.bind(*p_6_saxi_lite_cq_rresp);
        p_6_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(67264944);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_rvalid.bind(*p_6_saxi_lite_cq_rvalid);
        p_6_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(67265000);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_rready.bind(*p_6_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_aclk.bind(*p_6_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_6_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->saxi_lite_cq_aresetn.bind(*p_6_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->maxi_lite_mb_awaddr.bind(*p_6_maxi_lite_mb_awaddr);
        p_6_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(67265224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->maxi_lite_mb_awprot.bind(*p_6_maxi_lite_mb_awprot);
        p_6_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(67265280);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_awvalid.bind(*p_6_maxi_lite_mb_awvalid);
        p_6_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(67265336);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_awready.bind(*p_6_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->maxi_lite_mb_wdata.bind(*p_6_maxi_lite_mb_wdata);
        p_6_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(67265448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->maxi_lite_mb_wstrb.bind(*p_6_maxi_lite_mb_wstrb);
        p_6_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(67265504);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_wvalid.bind(*p_6_maxi_lite_mb_wvalid);
        p_6_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(67265560);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_wready.bind(*p_6_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->maxi_lite_mb_bresp.bind(*p_6_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_bvalid.bind(*p_6_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_bready.bind(*p_6_maxi_lite_mb_bready);
        p_6_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(67265784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->maxi_lite_mb_araddr.bind(*p_6_maxi_lite_mb_araddr);
        p_6_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(67265840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->maxi_lite_mb_arprot.bind(*p_6_maxi_lite_mb_arprot);
        p_6_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(67265896);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_arvalid.bind(*p_6_maxi_lite_mb_arvalid);
        p_6_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(67265952);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_arready.bind(*p_6_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->maxi_lite_mb_rdata.bind(*p_6_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->maxi_lite_mb_rresp.bind(*p_6_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_rvalid.bind(*p_6_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_rready.bind(*p_6_maxi_lite_mb_rready);
        p_6_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(67266232);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_aclk.bind(*p_6_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_6_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->maxi_lite_mb_aresetn.bind(*p_6_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_6_irq = new xsim_sc_channel<0, bool >();
        sc_inst_6->irq.bind(*p_6_irq);
        (*_glb_hdl_sc_channel_map).push_back(p_6_irq);
        sc_inst_7 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_7->xsim_set_dbg_index(393);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_awid.bind(*p_7_m_aximm_awid);
        p_7_m_aximm_awid->set_sv_netview_offsetfromdp(67350992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_aximm_awaddr.bind(*p_7_m_aximm_awaddr);
        p_7_m_aximm_awaddr->set_sv_netview_offsetfromdp(67351048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_aximm_awlen.bind(*p_7_m_aximm_awlen);
        p_7_m_aximm_awlen->set_sv_netview_offsetfromdp(67351104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_aximm_awsize.bind(*p_7_m_aximm_awsize);
        p_7_m_aximm_awsize->set_sv_netview_offsetfromdp(67351160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_aximm_awburst.bind(*p_7_m_aximm_awburst);
        p_7_m_aximm_awburst->set_sv_netview_offsetfromdp(67351216);
        xsim_sc_channel<0, bool > *p_7_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_awlock.bind(*p_7_m_aximm_awlock);
        p_7_m_aximm_awlock->set_sv_netview_offsetfromdp(67351272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_awcache.bind(*p_7_m_aximm_awcache);
        p_7_m_aximm_awcache->set_sv_netview_offsetfromdp(67351328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_aximm_awprot.bind(*p_7_m_aximm_awprot);
        p_7_m_aximm_awprot->set_sv_netview_offsetfromdp(67351384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_awqos.bind(*p_7_m_aximm_awqos);
        p_7_m_aximm_awqos->set_sv_netview_offsetfromdp(67351440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_aximm_awuser.bind(*p_7_m_aximm_awuser);
        p_7_m_aximm_awuser->set_sv_netview_offsetfromdp(67351496);
        xsim_sc_channel<0, bool > *p_7_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_awvalid.bind(*p_7_m_aximm_awvalid);
        p_7_m_aximm_awvalid->set_sv_netview_offsetfromdp(67351552);
        xsim_sc_channel<0, bool > *p_7_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_awready.bind(*p_7_m_aximm_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_aximm_wdata.bind(*p_7_m_aximm_wdata);
        p_7_m_aximm_wdata->set_sv_netview_offsetfromdp(67351664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_wstrb.bind(*p_7_m_aximm_wstrb);
        p_7_m_aximm_wstrb->set_sv_netview_offsetfromdp(67351720);
        xsim_sc_channel<0, bool > *p_7_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_wlast.bind(*p_7_m_aximm_wlast);
        p_7_m_aximm_wlast->set_sv_netview_offsetfromdp(67351776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_wuser.bind(*p_7_m_aximm_wuser);
        p_7_m_aximm_wuser->set_sv_netview_offsetfromdp(67351832);
        xsim_sc_channel<0, bool > *p_7_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_wvalid.bind(*p_7_m_aximm_wvalid);
        p_7_m_aximm_wvalid->set_sv_netview_offsetfromdp(67351888);
        xsim_sc_channel<0, bool > *p_7_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_wready.bind(*p_7_m_aximm_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_bid.bind(*p_7_m_aximm_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_aximm_bresp.bind(*p_7_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_buser.bind(*p_7_m_aximm_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_7_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_bvalid.bind(*p_7_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_bready.bind(*p_7_m_aximm_bready);
        p_7_m_aximm_bready->set_sv_netview_offsetfromdp(67352224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_arid.bind(*p_7_m_aximm_arid);
        p_7_m_aximm_arid->set_sv_netview_offsetfromdp(67352280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_aximm_araddr.bind(*p_7_m_aximm_araddr);
        p_7_m_aximm_araddr->set_sv_netview_offsetfromdp(67352336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_aximm_arlen.bind(*p_7_m_aximm_arlen);
        p_7_m_aximm_arlen->set_sv_netview_offsetfromdp(67352392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_aximm_arsize.bind(*p_7_m_aximm_arsize);
        p_7_m_aximm_arsize->set_sv_netview_offsetfromdp(67352448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_aximm_arburst.bind(*p_7_m_aximm_arburst);
        p_7_m_aximm_arburst->set_sv_netview_offsetfromdp(67352504);
        xsim_sc_channel<0, bool > *p_7_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_arlock.bind(*p_7_m_aximm_arlock);
        p_7_m_aximm_arlock->set_sv_netview_offsetfromdp(67352560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_arcache.bind(*p_7_m_aximm_arcache);
        p_7_m_aximm_arcache->set_sv_netview_offsetfromdp(67352616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_aximm_arprot.bind(*p_7_m_aximm_arprot);
        p_7_m_aximm_arprot->set_sv_netview_offsetfromdp(67352672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_aximm_arqos.bind(*p_7_m_aximm_arqos);
        p_7_m_aximm_arqos->set_sv_netview_offsetfromdp(67352728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_aximm_aruser.bind(*p_7_m_aximm_aruser);
        p_7_m_aximm_aruser->set_sv_netview_offsetfromdp(67352784);
        xsim_sc_channel<0, bool > *p_7_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_arvalid.bind(*p_7_m_aximm_arvalid);
        p_7_m_aximm_arvalid->set_sv_netview_offsetfromdp(67352840);
        xsim_sc_channel<0, bool > *p_7_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_arready.bind(*p_7_m_aximm_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_rid.bind(*p_7_m_aximm_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_aximm_rdata.bind(*p_7_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_aximm_rresp.bind(*p_7_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_7_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_rlast.bind(*p_7_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_aximm_ruser.bind(*p_7_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_7_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_rvalid.bind(*p_7_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_rready.bind(*p_7_m_aximm_rready);
        p_7_m_aximm_rready->set_sv_netview_offsetfromdp(67353288);
        xsim_sc_channel<0, bool > *p_7_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_aclk.bind(*p_7_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_7_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_aximm_aresetn.bind(*p_7_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axictrl_awaddr.bind(*p_7_m_axictrl_awaddr);
        p_7_m_axictrl_awaddr->set_sv_netview_offsetfromdp(67353456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axictrl_awprot.bind(*p_7_m_axictrl_awprot);
        p_7_m_axictrl_awprot->set_sv_netview_offsetfromdp(67353512);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_awvalid.bind(*p_7_m_axictrl_awvalid);
        p_7_m_axictrl_awvalid->set_sv_netview_offsetfromdp(67353568);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_awready.bind(*p_7_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axictrl_wdata.bind(*p_7_m_axictrl_wdata);
        p_7_m_axictrl_wdata->set_sv_netview_offsetfromdp(67353680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axictrl_wstrb.bind(*p_7_m_axictrl_wstrb);
        p_7_m_axictrl_wstrb->set_sv_netview_offsetfromdp(67353736);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_wvalid.bind(*p_7_m_axictrl_wvalid);
        p_7_m_axictrl_wvalid->set_sv_netview_offsetfromdp(67353792);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_wready.bind(*p_7_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axictrl_bresp.bind(*p_7_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_bvalid.bind(*p_7_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_bready.bind(*p_7_m_axictrl_bready);
        p_7_m_axictrl_bready->set_sv_netview_offsetfromdp(67354016);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axictrl_araddr.bind(*p_7_m_axictrl_araddr);
        p_7_m_axictrl_araddr->set_sv_netview_offsetfromdp(67354072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axictrl_arprot.bind(*p_7_m_axictrl_arprot);
        p_7_m_axictrl_arprot->set_sv_netview_offsetfromdp(67354128);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_arvalid.bind(*p_7_m_axictrl_arvalid);
        p_7_m_axictrl_arvalid->set_sv_netview_offsetfromdp(67354184);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_arready.bind(*p_7_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axictrl_rdata.bind(*p_7_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axictrl_rresp.bind(*p_7_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_rvalid.bind(*p_7_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_rready.bind(*p_7_m_axictrl_rready);
        p_7_m_axictrl_rready->set_sv_netview_offsetfromdp(67354464);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_aclk.bind(*p_7_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axictrl_aresetn.bind(*p_7_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axictrl_aresetn);
        sc_inst_8 = new emu_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.xtlm_simple_intercon_0");
        sc_inst_8->xsim_set_dbg_index(37);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_awid.bind(*p_8_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->s00_axi_awaddr.bind(*p_8_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s00_axi_awlen.bind(*p_8_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_awsize.bind(*p_8_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_awburst.bind(*p_8_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awlock.bind(*p_8_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awcache.bind(*p_8_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_awprot.bind(*p_8_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awregion.bind(*p_8_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awqos.bind(*p_8_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_awuser.bind(*p_8_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awvalid.bind(*p_8_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awready.bind(*p_8_s00_axi_awready);
        p_8_s00_axi_awready->set_sv_netview_offsetfromdp(67355352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_wdata.bind(*p_8_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_wstrb.bind(*p_8_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wlast.bind(*p_8_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_wuser.bind(*p_8_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wvalid.bind(*p_8_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wready.bind(*p_8_s00_axi_wready);
        p_8_s00_axi_wready->set_sv_netview_offsetfromdp(67355688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_bid.bind(*p_8_s00_axi_bid);
        p_8_s00_axi_bid->set_sv_netview_offsetfromdp(67355744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_bresp.bind(*p_8_s00_axi_bresp);
        p_8_s00_axi_bresp->set_sv_netview_offsetfromdp(67355800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_buser.bind(*p_8_s00_axi_buser);
        p_8_s00_axi_buser->set_sv_netview_offsetfromdp(67355856);
        xsim_sc_channel<0, bool > *p_8_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_bvalid.bind(*p_8_s00_axi_bvalid);
        p_8_s00_axi_bvalid->set_sv_netview_offsetfromdp(67355912);
        xsim_sc_channel<0, bool > *p_8_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_bready.bind(*p_8_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_arid.bind(*p_8_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->s00_axi_araddr.bind(*p_8_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s00_axi_arlen.bind(*p_8_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_arsize.bind(*p_8_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_arburst.bind(*p_8_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arlock.bind(*p_8_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arcache.bind(*p_8_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_arprot.bind(*p_8_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arregion.bind(*p_8_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arqos.bind(*p_8_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_aruser.bind(*p_8_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arvalid.bind(*p_8_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arready.bind(*p_8_s00_axi_arready);
        p_8_s00_axi_arready->set_sv_netview_offsetfromdp(67356696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_rid.bind(*p_8_s00_axi_rid);
        p_8_s00_axi_rid->set_sv_netview_offsetfromdp(67356752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_rdata.bind(*p_8_s00_axi_rdata);
        p_8_s00_axi_rdata->set_sv_netview_offsetfromdp(67356808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_rresp.bind(*p_8_s00_axi_rresp);
        p_8_s00_axi_rresp->set_sv_netview_offsetfromdp(67356864);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rlast.bind(*p_8_s00_axi_rlast);
        p_8_s00_axi_rlast->set_sv_netview_offsetfromdp(67356920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_ruser.bind(*p_8_s00_axi_ruser);
        p_8_s00_axi_ruser->set_sv_netview_offsetfromdp(67356976);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rvalid.bind(*p_8_s00_axi_rvalid);
        p_8_s00_axi_rvalid->set_sv_netview_offsetfromdp(67357032);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rready.bind(*p_8_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_aclk.bind(*p_8_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_aresetn.bind(*p_8_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_awid.bind(*p_8_m00_axi_awid);
        p_8_m00_axi_awid->set_sv_netview_offsetfromdp(67357256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m00_axi_awaddr.bind(*p_8_m00_axi_awaddr);
        p_8_m00_axi_awaddr->set_sv_netview_offsetfromdp(67357312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m00_axi_awlen.bind(*p_8_m00_axi_awlen);
        p_8_m00_axi_awlen->set_sv_netview_offsetfromdp(67357368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_awsize.bind(*p_8_m00_axi_awsize);
        p_8_m00_axi_awsize->set_sv_netview_offsetfromdp(67357424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_awburst.bind(*p_8_m00_axi_awburst);
        p_8_m00_axi_awburst->set_sv_netview_offsetfromdp(67357480);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awlock.bind(*p_8_m00_axi_awlock);
        p_8_m00_axi_awlock->set_sv_netview_offsetfromdp(67357536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_awcache.bind(*p_8_m00_axi_awcache);
        p_8_m00_axi_awcache->set_sv_netview_offsetfromdp(67357592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_awprot.bind(*p_8_m00_axi_awprot);
        p_8_m00_axi_awprot->set_sv_netview_offsetfromdp(67357648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_awqos.bind(*p_8_m00_axi_awqos);
        p_8_m00_axi_awqos->set_sv_netview_offsetfromdp(67357704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_awuser.bind(*p_8_m00_axi_awuser);
        p_8_m00_axi_awuser->set_sv_netview_offsetfromdp(67357760);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awvalid.bind(*p_8_m00_axi_awvalid);
        p_8_m00_axi_awvalid->set_sv_netview_offsetfromdp(67357816);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awready.bind(*p_8_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m00_axi_wdata.bind(*p_8_m00_axi_wdata);
        p_8_m00_axi_wdata->set_sv_netview_offsetfromdp(67357928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_wstrb.bind(*p_8_m00_axi_wstrb);
        p_8_m00_axi_wstrb->set_sv_netview_offsetfromdp(67357984);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wlast.bind(*p_8_m00_axi_wlast);
        p_8_m00_axi_wlast->set_sv_netview_offsetfromdp(67358040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_wuser.bind(*p_8_m00_axi_wuser);
        p_8_m00_axi_wuser->set_sv_netview_offsetfromdp(67358096);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wvalid.bind(*p_8_m00_axi_wvalid);
        p_8_m00_axi_wvalid->set_sv_netview_offsetfromdp(67358152);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wready.bind(*p_8_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_bid.bind(*p_8_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_bresp.bind(*p_8_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_buser.bind(*p_8_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_8_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_bvalid.bind(*p_8_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_bready.bind(*p_8_m00_axi_bready);
        p_8_m00_axi_bready->set_sv_netview_offsetfromdp(67358488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_arid.bind(*p_8_m00_axi_arid);
        p_8_m00_axi_arid->set_sv_netview_offsetfromdp(67358544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m00_axi_araddr.bind(*p_8_m00_axi_araddr);
        p_8_m00_axi_araddr->set_sv_netview_offsetfromdp(67358600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m00_axi_arlen.bind(*p_8_m00_axi_arlen);
        p_8_m00_axi_arlen->set_sv_netview_offsetfromdp(67358656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_arsize.bind(*p_8_m00_axi_arsize);
        p_8_m00_axi_arsize->set_sv_netview_offsetfromdp(67358712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_arburst.bind(*p_8_m00_axi_arburst);
        p_8_m00_axi_arburst->set_sv_netview_offsetfromdp(67358768);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arlock.bind(*p_8_m00_axi_arlock);
        p_8_m00_axi_arlock->set_sv_netview_offsetfromdp(67358824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_arcache.bind(*p_8_m00_axi_arcache);
        p_8_m00_axi_arcache->set_sv_netview_offsetfromdp(67358880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_arprot.bind(*p_8_m00_axi_arprot);
        p_8_m00_axi_arprot->set_sv_netview_offsetfromdp(67358936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_arqos.bind(*p_8_m00_axi_arqos);
        p_8_m00_axi_arqos->set_sv_netview_offsetfromdp(67358992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_aruser.bind(*p_8_m00_axi_aruser);
        p_8_m00_axi_aruser->set_sv_netview_offsetfromdp(67359048);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arvalid.bind(*p_8_m00_axi_arvalid);
        p_8_m00_axi_arvalid->set_sv_netview_offsetfromdp(67359104);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arready.bind(*p_8_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_rid.bind(*p_8_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m00_axi_rdata.bind(*p_8_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_rresp.bind(*p_8_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rlast.bind(*p_8_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_ruser.bind(*p_8_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rvalid.bind(*p_8_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rready.bind(*p_8_m00_axi_rready);
        p_8_m00_axi_rready->set_sv_netview_offsetfromdp(67359552);
        xsim_sc_channel<0, bool > *p_8_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_aclk.bind(*p_8_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_aresetn.bind(*p_8_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_awid.bind(*p_8_m02_axi_awid);
        p_8_m02_axi_awid->set_sv_netview_offsetfromdp(67359720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m02_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m02_axi_awaddr.bind(*p_8_m02_axi_awaddr);
        p_8_m02_axi_awaddr->set_sv_netview_offsetfromdp(67359776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m02_axi_awlen.bind(*p_8_m02_axi_awlen);
        p_8_m02_axi_awlen->set_sv_netview_offsetfromdp(67359832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m02_axi_awsize.bind(*p_8_m02_axi_awsize);
        p_8_m02_axi_awsize->set_sv_netview_offsetfromdp(67359888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m02_axi_awburst.bind(*p_8_m02_axi_awburst);
        p_8_m02_axi_awburst->set_sv_netview_offsetfromdp(67359944);
        xsim_sc_channel<0, bool > *p_8_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_awlock.bind(*p_8_m02_axi_awlock);
        p_8_m02_axi_awlock->set_sv_netview_offsetfromdp(67360000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m02_axi_awcache.bind(*p_8_m02_axi_awcache);
        p_8_m02_axi_awcache->set_sv_netview_offsetfromdp(67360056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m02_axi_awprot.bind(*p_8_m02_axi_awprot);
        p_8_m02_axi_awprot->set_sv_netview_offsetfromdp(67360112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m02_axi_awqos.bind(*p_8_m02_axi_awqos);
        p_8_m02_axi_awqos->set_sv_netview_offsetfromdp(67360168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_awuser.bind(*p_8_m02_axi_awuser);
        p_8_m02_axi_awuser->set_sv_netview_offsetfromdp(67360224);
        xsim_sc_channel<0, bool > *p_8_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_awvalid.bind(*p_8_m02_axi_awvalid);
        p_8_m02_axi_awvalid->set_sv_netview_offsetfromdp(67360280);
        xsim_sc_channel<0, bool > *p_8_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_awready.bind(*p_8_m02_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m02_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m02_axi_wdata.bind(*p_8_m02_axi_wdata);
        p_8_m02_axi_wdata->set_sv_netview_offsetfromdp(67360392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m02_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m02_axi_wstrb.bind(*p_8_m02_axi_wstrb);
        p_8_m02_axi_wstrb->set_sv_netview_offsetfromdp(67360448);
        xsim_sc_channel<0, bool > *p_8_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_wlast.bind(*p_8_m02_axi_wlast);
        p_8_m02_axi_wlast->set_sv_netview_offsetfromdp(67360504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_wuser.bind(*p_8_m02_axi_wuser);
        p_8_m02_axi_wuser->set_sv_netview_offsetfromdp(67360560);
        xsim_sc_channel<0, bool > *p_8_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_wvalid.bind(*p_8_m02_axi_wvalid);
        p_8_m02_axi_wvalid->set_sv_netview_offsetfromdp(67360616);
        xsim_sc_channel<0, bool > *p_8_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_wready.bind(*p_8_m02_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_bid.bind(*p_8_m02_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m02_axi_bresp.bind(*p_8_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_buser.bind(*p_8_m02_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_8_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_bvalid.bind(*p_8_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_bready.bind(*p_8_m02_axi_bready);
        p_8_m02_axi_bready->set_sv_netview_offsetfromdp(67360952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_arid.bind(*p_8_m02_axi_arid);
        p_8_m02_axi_arid->set_sv_netview_offsetfromdp(67361008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m02_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m02_axi_araddr.bind(*p_8_m02_axi_araddr);
        p_8_m02_axi_araddr->set_sv_netview_offsetfromdp(67361064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m02_axi_arlen.bind(*p_8_m02_axi_arlen);
        p_8_m02_axi_arlen->set_sv_netview_offsetfromdp(67361120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m02_axi_arsize.bind(*p_8_m02_axi_arsize);
        p_8_m02_axi_arsize->set_sv_netview_offsetfromdp(67361176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m02_axi_arburst.bind(*p_8_m02_axi_arburst);
        p_8_m02_axi_arburst->set_sv_netview_offsetfromdp(67361232);
        xsim_sc_channel<0, bool > *p_8_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_arlock.bind(*p_8_m02_axi_arlock);
        p_8_m02_axi_arlock->set_sv_netview_offsetfromdp(67361288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m02_axi_arcache.bind(*p_8_m02_axi_arcache);
        p_8_m02_axi_arcache->set_sv_netview_offsetfromdp(67361344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m02_axi_arprot.bind(*p_8_m02_axi_arprot);
        p_8_m02_axi_arprot->set_sv_netview_offsetfromdp(67361400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m02_axi_arqos.bind(*p_8_m02_axi_arqos);
        p_8_m02_axi_arqos->set_sv_netview_offsetfromdp(67361456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_aruser.bind(*p_8_m02_axi_aruser);
        p_8_m02_axi_aruser->set_sv_netview_offsetfromdp(67361512);
        xsim_sc_channel<0, bool > *p_8_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_arvalid.bind(*p_8_m02_axi_arvalid);
        p_8_m02_axi_arvalid->set_sv_netview_offsetfromdp(67361568);
        xsim_sc_channel<0, bool > *p_8_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_arready.bind(*p_8_m02_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_rid.bind(*p_8_m02_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m02_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m02_axi_rdata.bind(*p_8_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m02_axi_rresp.bind(*p_8_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_rlast.bind(*p_8_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m02_axi_ruser.bind(*p_8_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_8_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_rvalid.bind(*p_8_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_rready.bind(*p_8_m02_axi_rready);
        p_8_m02_axi_rready->set_sv_netview_offsetfromdp(67362016);
        xsim_sc_channel<0, bool > *p_8_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_aclk.bind(*p_8_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->m02_axi_aresetn.bind(*p_8_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_awid.bind(*p_8_m01_axi_awid);
        p_8_m01_axi_awid->set_sv_netview_offsetfromdp(67362184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m01_axi_awaddr.bind(*p_8_m01_axi_awaddr);
        p_8_m01_axi_awaddr->set_sv_netview_offsetfromdp(67362240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m01_axi_awlen.bind(*p_8_m01_axi_awlen);
        p_8_m01_axi_awlen->set_sv_netview_offsetfromdp(67362296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m01_axi_awsize.bind(*p_8_m01_axi_awsize);
        p_8_m01_axi_awsize->set_sv_netview_offsetfromdp(67362352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m01_axi_awburst.bind(*p_8_m01_axi_awburst);
        p_8_m01_axi_awburst->set_sv_netview_offsetfromdp(67362408);
        xsim_sc_channel<0, bool > *p_8_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_awlock.bind(*p_8_m01_axi_awlock);
        p_8_m01_axi_awlock->set_sv_netview_offsetfromdp(67362464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_awcache.bind(*p_8_m01_axi_awcache);
        p_8_m01_axi_awcache->set_sv_netview_offsetfromdp(67362520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m01_axi_awprot.bind(*p_8_m01_axi_awprot);
        p_8_m01_axi_awprot->set_sv_netview_offsetfromdp(67362576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_awqos.bind(*p_8_m01_axi_awqos);
        p_8_m01_axi_awqos->set_sv_netview_offsetfromdp(67362632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_awuser.bind(*p_8_m01_axi_awuser);
        p_8_m01_axi_awuser->set_sv_netview_offsetfromdp(67362688);
        xsim_sc_channel<0, bool > *p_8_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_awvalid.bind(*p_8_m01_axi_awvalid);
        p_8_m01_axi_awvalid->set_sv_netview_offsetfromdp(67362744);
        xsim_sc_channel<0, bool > *p_8_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_awready.bind(*p_8_m01_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m01_axi_wdata.bind(*p_8_m01_axi_wdata);
        p_8_m01_axi_wdata->set_sv_netview_offsetfromdp(67362856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_wstrb.bind(*p_8_m01_axi_wstrb);
        p_8_m01_axi_wstrb->set_sv_netview_offsetfromdp(67362912);
        xsim_sc_channel<0, bool > *p_8_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_wlast.bind(*p_8_m01_axi_wlast);
        p_8_m01_axi_wlast->set_sv_netview_offsetfromdp(67362968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_wuser.bind(*p_8_m01_axi_wuser);
        p_8_m01_axi_wuser->set_sv_netview_offsetfromdp(67363024);
        xsim_sc_channel<0, bool > *p_8_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_wvalid.bind(*p_8_m01_axi_wvalid);
        p_8_m01_axi_wvalid->set_sv_netview_offsetfromdp(67363080);
        xsim_sc_channel<0, bool > *p_8_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_wready.bind(*p_8_m01_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_bid.bind(*p_8_m01_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m01_axi_bresp.bind(*p_8_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_buser.bind(*p_8_m01_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_8_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_bvalid.bind(*p_8_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_bready.bind(*p_8_m01_axi_bready);
        p_8_m01_axi_bready->set_sv_netview_offsetfromdp(67363416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_arid.bind(*p_8_m01_axi_arid);
        p_8_m01_axi_arid->set_sv_netview_offsetfromdp(67363472);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m01_axi_araddr.bind(*p_8_m01_axi_araddr);
        p_8_m01_axi_araddr->set_sv_netview_offsetfromdp(67363528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m01_axi_arlen.bind(*p_8_m01_axi_arlen);
        p_8_m01_axi_arlen->set_sv_netview_offsetfromdp(67363584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m01_axi_arsize.bind(*p_8_m01_axi_arsize);
        p_8_m01_axi_arsize->set_sv_netview_offsetfromdp(67363640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m01_axi_arburst.bind(*p_8_m01_axi_arburst);
        p_8_m01_axi_arburst->set_sv_netview_offsetfromdp(67363696);
        xsim_sc_channel<0, bool > *p_8_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_arlock.bind(*p_8_m01_axi_arlock);
        p_8_m01_axi_arlock->set_sv_netview_offsetfromdp(67363752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_arcache.bind(*p_8_m01_axi_arcache);
        p_8_m01_axi_arcache->set_sv_netview_offsetfromdp(67363808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m01_axi_arprot.bind(*p_8_m01_axi_arprot);
        p_8_m01_axi_arprot->set_sv_netview_offsetfromdp(67363864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m01_axi_arqos.bind(*p_8_m01_axi_arqos);
        p_8_m01_axi_arqos->set_sv_netview_offsetfromdp(67363920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_aruser.bind(*p_8_m01_axi_aruser);
        p_8_m01_axi_aruser->set_sv_netview_offsetfromdp(67363976);
        xsim_sc_channel<0, bool > *p_8_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_arvalid.bind(*p_8_m01_axi_arvalid);
        p_8_m01_axi_arvalid->set_sv_netview_offsetfromdp(67364032);
        xsim_sc_channel<0, bool > *p_8_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_arready.bind(*p_8_m01_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_rid.bind(*p_8_m01_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m01_axi_rdata.bind(*p_8_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m01_axi_rresp.bind(*p_8_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_rlast.bind(*p_8_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m01_axi_ruser.bind(*p_8_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_8_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_rvalid.bind(*p_8_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_rready.bind(*p_8_m01_axi_rready);
        p_8_m01_axi_rready->set_sv_netview_offsetfromdp(67364480);
        xsim_sc_channel<0, bool > *p_8_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_aclk.bind(*p_8_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->m01_axi_aresetn.bind(*p_8_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m01_axi_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
    }
